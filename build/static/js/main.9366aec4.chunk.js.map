{"version":3,"sources":["UserInput/UserInput.js","UserOutput/UserOutput.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","ps","className","style","border","type","placeholder","onChange","typing","value","currentText","UserOutput","uName","lengthOf","App","state","username","onTypehandler","typeEvent","setState","target","this","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAkBeA,G,YAfG,SAACC,GAIjB,OACE,qBAAKC,UAAU,YAAf,SACI,uBAAOC,MALK,CAChBC,OAAQ,qBAKJF,UAAU,UACVG,KAAK,OACLC,YAAY,uBACZC,SAAUN,EAAGO,OACbC,MAAOR,EAAGS,kBCFHC,G,MATI,SAACV,GAElB,OACE,sBAAKC,UAAU,aAAf,UACI,4CAAeD,EAAGW,SAClB,yCAAYX,EAAGY,iBCwBRC,E,4MA1BbC,MAAQ,CACNC,SAAU,wB,EAEZC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAACH,SAAUE,EAAUE,OAAOX,S,uDAG1C,OACE,sBAAKP,UAAU,MAAf,UACE,qBAAKA,UAAU,OACf,qBAAKA,UAAU,QACf,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CACAM,OAAQa,KAAKJ,cACbP,YAAaW,KAAKN,MAAMC,WACxB,cAAC,EAAD,CACAJ,MAAOS,KAAKN,MAAMC,SAClBH,SAAUQ,KAAKN,MAAMC,SAASM,qB,GAnBxBC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9366aec4.chunk.js","sourcesContent":["import React from 'react';\nimport './UserInput.scss'\n\nconst UserInput = (ps) => {\n  let Input_style = {\n    border: '2px solid #b1d9fb',\n  }\n  return (\n    <div className=\"userInput\">\n        <input style={Input_style}\n        className=\"uname-p\" \n        type=\"text\" \n        placeholder=\"Text ...ðŸ–¥\" \n        onChange={ps.typing} \n        value={ps.currentText}/>\n    </div>\n  );\n};\nexport default UserInput;\n","import React from 'react';\nimport './UserOutput.scss';\n\nconst UserOutput = (ps) => {\n\n  return (\n    <div className=\"userOutput\">\n        <p>Username : {ps.uName}</p>\n        <p>Length: {ps.lengthOf}</p>\n    </div>\n  );\n};\nexport default UserOutput;\n","import './App.scss';\nimport React, {Component} from 'react';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nclass App extends Component{\n  state = {\n    username: \"This is me @deeAjith\",\n  }\n  onTypehandler = (typeEvent) => {\n    this.setState({username: typeEvent.target.value});\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"bg\"></div>\n        <div className=\"bg1\"></div>\n        <div className=\"card\">\n          <div className=\"card_main\">    \n            <UserInput \n            typing={this.onTypehandler} \n            currentText={this.state.username} />\n            <UserOutput \n            uName={this.state.username} \n            lengthOf={this.state.username.length}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}